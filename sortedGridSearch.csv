,mean_fit_time,std_fit_time,mean_score_time,std_score_time,param_clf,param_count,param_dim_reduce,params,split0_test_score,split1_test_score,split2_test_score,split3_test_score,split4_test_score,mean_test_score,std_test_score,rank_test_score
72,2.315673303604126,0.04266177262030331,0.15983548164367675,0.006352367210085797,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9789156626506024,0.9759036144578314,0.9637462235649547,0.972809667673716,0.9697885196374623,0.9722327375969133,0.005224266347779415,1
97,9.268960809707641,0.10046453230494262,2.0126434326171876,0.07632496717776806,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9819277108433735,0.9607250755287009,0.9667673716012085,0.9667673716012085,0.971623048083573,0.008698196861372577,2
87,1.8150075912475585,0.021375843953056875,0.15536961555480958,0.006162211970279047,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9728915662650602,0.9789156626506024,0.9516616314199395,0.9818731117824774,0.9637462235649547,0.9698176391366069,0.010991452895945773,3
27,1.9737127780914308,0.05985738739867903,0.18374624252319335,0.005624239567971207,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9789156626506024,0.9819277108433735,0.9546827794561934,0.9667673716012085,0.9637462235649547,0.9692079496232665,0.010027955511647126,4
189,10.898173236846924,0.7750232341758619,2.0799567222595217,0.08775616035020022,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9608433734939759,0.9819277108433735,0.9788519637462235,0.9637462235649547,0.9577039274924471,0.9686146398281948,0.009850668625842773,5
147,1.8109580516815185,0.010936725306554505,0.15530014038085938,0.005795683407165927,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9759036144578314,0.9819277108433735,0.9516616314199395,0.9697885196374623,0.9637462235649547,0.9686055399847122,0.010419698285267957,6
112,9.03096661567688,0.08414987374710381,2.0139610290527346,0.07700432362469897,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9759036144578314,0.9607250755287009,0.9637462235649547,0.9607250755287009,0.9686055399847122,0.008701247307769132,6
67,9.383265161514283,0.13111449622683666,2.0528791904449464,0.08155597489489938,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9759036144578314,0.9577039274924471,0.9667673716012085,0.9607250755287009,0.9686055399847122,0.009111178468042836,6
37,9.453278350830079,0.13362405308523914,2.0476815700531006,0.08014278340843928,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9879518072289156,0.9789156626506024,0.9486404833836858,0.9607250755287009,0.9667673716012085,0.9686000800786226,0.013745258125970036,9
132,2.163398599624634,0.05241007991018693,0.15856609344482422,0.006937867253153502,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9759036144578314,0.9789156626506024,0.9516616314199395,0.9697885196374623,0.9637462235649547,0.968003130346158,0.009693858549775764,10
157,9.341797065734863,0.14601601010662324,2.0186489105224608,0.07736198185098118,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9789156626506024,0.9486404833836858,0.9667673716012085,0.9637462235649547,0.967999490408765,0.011895694090604075,11
172,9.862458896636962,0.615139479878174,2.1212010860443113,0.1270304958311463,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9759036144578314,0.9486404833836858,0.9667673716012085,0.9637462235649547,0.9673970807702107,0.011393292440665401,12
12,2.258022689819336,0.07796530188138245,0.18734121322631836,0.005641003509512081,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9789156626506024,0.9789156626506024,0.9516616314199395,0.9637462235649547,0.9637462235649547,0.9673970807702107,0.010388622045217198,12
219,10.999185466766358,0.6648920922432479,2.044490194320679,0.0813876242451797,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9698795180722891,0.9728915662650602,0.972809667673716,0.9667673716012085,0.9486404833836858,0.9661977213991919,0.009062694162922257,14
82,9.148740148544311,0.09149474721697773,2.0440444946289062,0.07898530000712871,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9759036144578314,0.9698795180722891,0.9607250755287009,0.9637462235649547,0.9607250755287009,0.9661959014304953,0.005893547616253208,15
127,9.335276365280151,0.08647851360281393,2.047254467010498,0.07988365584528434,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9789156626506024,0.9759036144578314,0.945619335347432,0.9667673716012085,0.9637462235649547,0.9661904415244058,0.011711143754871953,16
142,9.138537931442261,0.07935042229379752,2.049371099472046,0.0819945738693517,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9759036144578314,0.9425981873111783,0.9667673716012085,0.9637462235649547,0.9661886215557093,0.013452946637070237,17
234,10.52869372367859,0.26170297358536343,2.0397629261016847,0.08615924803658341,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9608433734939759,0.9728915662650602,0.9788519637462235,0.9607250755287009,0.9546827794561934,0.9655989516980309,0.008880963517041348,18
137,18.673188734054566,0.16375261794686008,4.422877359390259,0.15765428198480153,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9728915662650602,0.945619335347432,0.9667673716012085,0.9607250755287009,0.965586211917155,0.012199301081955442,19
122,19.03873143196106,0.1700651735449349,4.442601346969605,0.16073764024424242,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9759036144578314,0.945619335347432,0.9667673716012085,0.9577039274924471,0.9655843919484584,0.012928225490625557,20
204,10.11883635520935,0.3645142368695703,2.0586804389953612,0.081071235966116,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9728915662650602,0.9668674698795181,0.9667673716012085,0.9607250755287009,0.9577039274924471,0.9649910821533869,0.00529896442475965,21
162,2.049941062927246,0.029833435314668335,0.0686373233795166,0.0018361672995198847,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9759036144578314,0.9668674698795181,0.9486404833836858,0.9637462235649547,0.9697885196374623,0.9649892621846904,0.009105068204900455,22
177,1.7097247123718262,0.09678444961064807,0.06454863548278808,0.0022865909705630802,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9728915662650602,0.9698795180722891,0.9486404833836858,0.9637462235649547,0.9697885196374623,0.9649892621846904,0.008697374291326578,22
52,9.076345205307007,0.08143426856889431,2.039341926574707,0.07723009770773337,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9789156626506024,0.9759036144578314,0.9486404833836858,0.9637462235649547,0.9577039274924471,0.9649819823099042,0.01126917268807805,24
2,19.89106955528259,1.4473890137663905,4.5482926845550535,0.21214588527114694,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9849397590361446,0.9728915662650602,0.945619335347432,0.9637462235649547,0.9577039274924471,0.9649801623412075,0.013343789811231715,25
102,2.0025479793548584,0.02383655290663482,0.06838517189025879,0.002197585761405114,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9668674698795181,0.9759036144578314,0.9516616314199395,0.9667673716012085,0.9607250755287009,0.9643850325774397,0.007997449410049413,26
7,150.00903759002685,280.9912026245657,190.94289035797118,377.8047409914416,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9849397590361446,0.9698795180722891,0.945619335347432,0.9607250755287009,0.9607250755287009,0.9643777527026535,0.012896727099446226,27
17,19.639771270751954,0.6610009528931946,4.610061120986939,0.28620293751793124,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9849397590361446,0.9728915662650602,0.945619335347432,0.9637462235649547,0.9546827794561934,0.9643759327339569,0.013722613936466573,28
184,20.94504690170288,0.9818160712502126,4.475599193572998,0.09508958904615689,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.963855421686747,0.963855421686747,0.972809667673716,0.9607250755287009,0.9577039274924471,0.9637899028136715,0.005055630632734242,29
74,4.49052243232727,0.8474674332059348,0.16835508346557618,0.004728263865354439,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9759036144578314,0.963855421686747,0.9577039274924471,0.9697885196374623,0.9516616314199395,0.9637826229388855,0.008565786641598462,30
57,1.8449455738067626,0.15977577891840378,0.09631648063659667,0.0018565898964445213,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9728915662650602,0.9698795180722891,0.9486404833836858,0.9667673716012085,0.9607250755287009,0.9637808029701889,0.008575391224634164,31
42,2.1832561016082765,0.04631111767585781,0.10089311599731446,0.0018700572568803857,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9728915662650602,0.9698795180722891,0.945619335347432,0.9667673716012085,0.9637462235649547,0.9637808029701889,0.009580814452302713,31
62,19.518863868713378,0.1380533729077716,4.558140802383423,0.24053301865518137,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9789156626506024,0.9698795180722891,0.9425981873111783,0.972809667673716,0.9546827794561934,0.9637771630327958,0.013260888907232758,33
47,20.66554388999939,0.7370352766170752,4.767797565460205,0.1998467757532787,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9728915662650602,0.9789156626506024,0.9486404833836858,0.9637462235649547,0.9546827794561934,0.9637753430640992,0.01117205747466454,34
199,20.66187834739685,0.6996493577882403,4.549389457702636,0.21072775867987675,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9608433734939759,0.963855421686747,0.9607250755287009,0.9667673716012085,0.9637462235649547,0.9631874931751174,0.0022419739265061257,35
92,20.047810649871828,0.19369854951993873,4.661859130859375,0.1716021783136651,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9728915662650602,0.9668674698795181,0.9486404833836858,0.9607250755287009,0.9667673716012085,0.9631783933316347,0.008224419409625348,36
22,9.275484609603883,0.10612223693771762,2.0798276901245116,0.07992860812203316,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9819277108433735,0.9789156626506024,0.9365558912386707,0.9607250755287009,0.9577039274924471,0.9631656535507588,0.01639477906786261,37
77,19.061254262924194,0.48019480639154294,4.461818218231201,0.1547792051373378,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9789156626506024,0.9608433734939759,0.9425981873111783,0.9697885196374623,0.9607250755287009,0.962574163724384,0.012037823009449887,38
107,19.690205526351928,0.18511989749220215,4.656772422790527,0.16927100472209675,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9668674698795181,0.9759036144578314,0.9516616314199395,0.9637462235649547,0.9546827794561934,0.9625723437556875,0.008704455747137222,39
152,20.03786745071411,0.20055976522782845,4.662446928024292,0.1691535445128245,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9728915662650602,0.9759036144578314,0.945619335347432,0.9577039274924471,0.9607250755287009,0.9625687038182944,0.010942828120655656,40
194,4.546803760528564,0.8654803337676686,0.16733899116516113,0.005898510874995359,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9608433734939759,0.9759036144578314,0.9637462235649547,0.9607250755287009,0.9486404833836858,0.9619717540858298,0.008692476103803956,41
167,19.787585401535033,0.1844327519230847,4.671061229705811,0.16843676950922518,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9698795180722891,0.9698795180722891,0.9516616314199395,0.9607250755287009,0.9577039274924471,0.961969934117133,0.007087067469854494,42
32,20.56310920715332,0.2794647087638179,4.75790491104126,0.16720853049264056,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9759036144578314,0.9789156626506024,0.945619335347432,0.9577039274924471,0.9516616314199395,0.9619608342736505,0.01321443715394357,43
89,3.5341655254364013,0.563303162497244,0.16523275375366211,0.004984679196633513,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.963855421686747,0.9668674698795181,0.9516616314199395,0.9697885196374623,0.9546827794561934,0.9613711644159721,0.007017724720049801,44
117,1.6382070541381837,0.023690500925495187,0.06453313827514648,0.0022386664973024664,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.963855421686747,0.9668674698795181,0.9577039274924471,0.9577039274924471,0.9607250755287009,0.9613711644159721,0.0035691901628461422,44
84,10.074112367630004,0.39991004555237614,2.055934286117554,0.07967071140404133,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9728915662650602,0.9668674698795181,0.9577039274924471,0.9546827794561934,0.9516616314199395,0.9607614749026319,0.007918694046674571,46
69,10.64735803604126,0.5918025419277236,2.0655431270599367,0.08498925212268586,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9698795180722891,0.9578313253012049,0.9607250755287009,0.9516616314199395,0.9607250755287009,0.960164525170167,0.005877968088606305,47
209,3.5348971843719483,0.5832657401740928,0.16190948486328124,0.006212736630079006,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9578313253012049,0.9759036144578314,0.9546827794561934,0.9637462235649547,0.9486404833836858,0.960160885232774,0.009261148152883987,48
99,10.981872940063477,0.7499835067762851,2.0250292301177977,0.07719913582882028,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9728915662650602,0.9548192771084337,0.9607250755287009,0.9486404833836858,0.9577039274924471,0.9589560659556655,0.008030189041854685,49
149,3.55114164352417,0.6097811914065041,0.16283597946166992,0.00599830871464005,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9608433734939759,0.9518072289156626,0.9546827794561934,0.9607250755287009,0.9607250755287009,0.9577567065846466,0.003794608109145926,50
79,20.11238651275635,0.9106312213581939,4.465285587310791,0.16145866711937146,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9698795180722891,0.9518072289156626,0.9546827794561934,0.9516616314199395,0.9607250755287009,0.957751246678557,0.006895924554231716,51
71,0.6919607162475586,0.006401895762817261,0.14771246910095215,0.005393707395369501,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9698795180722891,0.9578313253012049,0.9395770392749244,0.9607250755287009,0.9607250755287009,0.957747606741164,0.009950783327459748,52
156,8.113458585739135,0.07755287262809636,2.0105926036834716,0.07792773264311029,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9578313253012049,0.9546827794561934,0.9516616314199395,0.9637462235649547,0.9571506570086996,0.00401616579276954,53
171,8.273291730880738,0.13070717025310277,2.03107590675354,0.0789864560433093,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9548192771084337,0.9608433734939759,0.9546827794561934,0.9516616314199395,0.9637462235649547,0.9571506570086994,0.004445060337188049,54
64,21.138068389892577,0.8458036710463075,4.4857950687408445,0.1681260333945232,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.963855421686747,0.9518072289156626,0.945619335347432,0.9667673716012085,0.9577039274924471,0.9571506570086994,0.007736469223244251,54
86,0.6657905578613281,0.0045671195792927706,0.14707365036010742,0.005310233184103044,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9668674698795181,0.9578313253012049,0.9395770392749244,0.9637462235649547,0.9577039274924471,0.9571451971026098,0.009460647539329299,56
214,22.61742959022522,0.7389531032117588,4.694487810134888,0.15636419070520574,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9427710843373494,0.9518072289156626,0.9577039274924471,0.9788519637462235,0.9516616314199395,0.9565591671823246,0.012124003111026682,57
76,18.120284223556517,0.10111182259715756,4.504399394989013,0.26426131553557397,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9608433734939759,0.9518072289156626,0.9516616314199395,0.9637462235649547,0.9546827794561934,0.9565482473701451,0.004900922600678137,58
61,18.56470432281494,0.3719522824950662,4.682941675186157,0.31303303304159286,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.963855421686747,0.9548192771084337,0.9486404833836858,0.9607250755287009,0.9546827794561934,0.9565446074327522,0.005288528409359228,59
121,17.831911182403566,0.1643027372612934,4.436157846450806,0.1587341288017777,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9518072289156626,0.9516616314199395,0.9607250755287009,0.9577039274924471,0.9559458377315909,0.0036047070215426366,60
114,10.451996564865112,0.29303510707762326,2.028312397003174,0.07776659766216859,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9608433734939759,0.9518072289156626,0.9577039274924471,0.9577039274924471,0.9516616314199395,0.9559440177628945,0.0036235371075493987,61
126,8.242276859283447,0.07772747216934167,2.0414976119995116,0.08124838462270634,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9548192771084337,0.9578313253012049,0.9516616314199395,0.9516616314199395,0.9637462235649547,0.9559440177628945,0.0045250204914964835,61
96,8.115625095367431,0.08376289790600303,2.0076988697052003,0.07665544420698527,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.963855421686747,0.9608433734939759,0.9425981873111783,0.9546827794561934,0.9577039274924471,0.9559367378881083,0.007340203381536018,63
139,19.944917678833008,0.7983834931930546,4.425150632858276,0.15328522844240344,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9728915662650602,0.9427710843373494,0.9486404833836858,0.9577039274924471,0.9546827794561934,0.9553379681869473,0.010167976333325359,64
136,17.72461919784546,0.1590700135909294,4.416204786300659,0.15894052410340043,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.963855421686747,0.9518072289156626,0.9425981873111783,0.9607250755287009,0.9577039274924471,0.955337968186947,0.0075091123261342785,65
141,8.225915431976318,0.07633547235889468,2.0446840286254884,0.08064515048044771,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9548192771084337,0.9608433734939759,0.9486404833836858,0.9516616314199395,0.9607250755287009,0.955337968186947,0.0048573904157589685,65
66,8.307333707809448,0.12330541573105955,2.0573028564453124,0.07812859896234903,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9608433734939759,0.945619335347432,0.9546827794561934,0.9577039274924471,0.9553361482182506,0.0052345995206880816,67
81,8.31549792289734,0.05775896756622624,2.062695932388306,0.08502291635615276,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9608433734939759,0.9486404833836858,0.9516616314199395,0.9546827794561934,0.9547319186109998,0.004324138384432804,68
131,0.683329439163208,0.004094089792373476,0.148345947265625,0.008066012106991004,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9668674698795181,0.9548192771084337,0.9335347432024169,0.9577039274924471,0.9577039274924471,0.9541258690350526,0.011067327360663152,69
109,21.05435848236084,0.8524014434879921,4.662949562072754,0.16872860047699753,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9518072289156626,0.9457831325301205,0.9546827794561934,0.9577039274924471,0.9577039274924471,0.9535361991773742,0.004453177417416465,70
119,3.4644769191741944,0.16451719472274764,0.07040934562683106,0.0020665449055349877,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9608433734939759,0.9487951807228916,0.9607250755287009,0.9486404833836858,0.9486404833836858,0.953528919302588,0.005924319318805625,71
146,0.6569422245025635,0.005002758720504432,0.14533896446228028,0.0058705161177137755,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.963855421686747,0.9548192771084337,0.9335347432024169,0.9577039274924471,0.9577039274924471,0.9535234593964983,0.010420460550280012,72
229,91.58627200126648,141.50771164261056,4.653323793411255,0.16480562394673395,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9397590361445783,0.9518072289156626,0.9516616314199395,0.9697885196374623,0.9516616314199395,0.9529356095075165,0.009614176496530995,73
111,8.100748205184937,0.07263282406412405,2.0075379848480224,0.0770333122518489,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.963855421686747,0.9608433734939759,0.9395770392749244,0.9486404833836858,0.9516616314199395,0.9529155898518546,0.008721187449063167,74
129,10.624360942840577,0.5681148030144475,2.058726119995117,0.08046080397134855,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9578313253012049,0.9518072289156626,0.9577039274924471,0.9486404833836858,0.945619335347432,0.9523204600880865,0.004859260525266421,75
94,22.48380627632141,0.6887257386148918,4.674258995056152,0.1718561369310902,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9548192771084337,0.9487951807228916,0.9546827794561934,0.9516616314199395,0.9486404833836858,0.9517198704182288,0.0026990730965271896,76
91,18.643995809555054,0.17190879427880582,4.648383760452271,0.17339914992723926,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9548192771084337,0.9427710843373494,0.9516616314199395,0.9577039274924471,0.9486404833836858,0.9511192807483712,0.005160978778330056,77
11,0.6764025688171387,0.008349355497780493,0.15081462860107422,0.005579800697539596,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9457831325301205,0.945619335347432,0.9546827794561934,0.9516616314199395,0.951115640810978,0.0048325566803826756,78
101,0.35217766761779784,0.008573624571947628,0.05318183898925781,0.0020021956392028413,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9518072289156626,0.9395770392749244,0.9607250755287009,0.945619335347432,0.9511120008735849,0.0077623267231377874,79
1,17.75403709411621,0.15425478813207544,4.439246892929077,0.1588662067975355,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9427710843373494,0.945619335347432,0.9577039274924471,0.9486404833836858,0.9505132311724239,0.006207396450790706,80
29,3.6365300178527833,0.5280488823601127,0.17275576591491698,0.00808066214660335,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.963855421686747,0.9457831325301205,0.9486404833836858,0.9395770392749244,0.9546827794561934,0.9505077712663343,0.008256880067233421,81
159,10.987624263763427,0.6826007692479622,2.0264177322387695,0.07645199286486135,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9668674698795181,0.9427710843373494,0.9516616314199395,0.9516616314199395,0.9395770392749244,0.9505077712663341,0.009483034869993063,82
239,3.5517372131347655,0.16383789945603444,0.07179155349731445,0.0016968510171363963,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9578313253012049,0.9578313253012049,0.9214501510574018,0.9637462235649547,0.9516616314199395,0.9505041313289411,0.015021332336920736,83
106,18.67234377861023,0.18401606314472274,4.650313043594361,0.17036420393861884,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9397590361445783,0.9486404833836858,0.9546827794561934,0.9486404833836858,0.9499108215338696,0.006193419523375647,84
124,20.951910781860352,0.9595121690388181,4.439452695846557,0.15762404497834737,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.963855421686747,0.9427710843373494,0.9335347432024169,0.9697885196374623,0.9395770392749244,0.94990536162778,0.014251410111261733,85
144,10.066601467132568,0.3598968401391596,2.055324983596802,0.08113713125291414,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9668674698795181,0.9457831325301205,0.9486404833836858,0.945619335347432,0.9425981873111783,0.9499017216903869,0.008695637499033314,86
166,18.691142892837526,0.16685637948756696,4.6598022937774655,0.16915575807221286,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9518072289156626,0.9457831325301205,0.9365558912386707,0.9546827794561934,0.9577039274924471,0.9493065919266188,0.007492222053058312,87
179,3.6567079544067385,0.22997655879998988,0.07156634330749512,0.002393380421815584,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.963855421686747,0.9367469879518072,0.9486404833836858,0.9667673716012085,0.9305135951661632,0.9493047719579224,0.014338140308323767,88
224,4.168899822235107,0.8019626638457285,0.07600440979003906,0.0020778893624265955,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9427710843373494,0.9608433734939759,0.9395770392749244,0.9607250755287009,0.9425981873111783,0.9493029519892258,0.00944307976450651,89
16,18.480828189849852,0.7650938018049145,4.693891620635986,0.27631697002390604,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9578313253012049,0.9487951807228916,0.945619335347432,0.9516616314199395,0.9425981873111783,0.9493011320205292,0.005235976242393133,90
134,4.395338153839111,0.8194016695593704,0.16839780807495117,0.005253620948166696,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9698795180722891,0.9367469879518072,0.9365558912386707,0.9577039274924471,0.945619335347432,0.9493011320205292,0.012866081508104619,90
176,0.31412696838378906,0.0062468238169803465,0.0518343448638916,0.001867820152582586,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9608433734939759,0.9367469879518072,0.945619335347432,0.9516616314199395,0.9486404833836858,0.948702362319368,0.007856224112542175,92
26,0.6628335952758789,0.010573993026866317,0.1504086971282959,0.005524977616703218,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9608433734939759,0.9427710843373494,0.9365558912386707,0.9546827794561934,0.9486404833836858,0.948698722381975,0.00855441549661394,93
161,0.34506711959838865,0.0024140482487664643,0.05279483795166016,0.0021453381512085614,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9608433734939759,0.9367469879518072,0.9395770392749244,0.9516616314199395,0.9516616314199395,0.9480981327121174,0.008823782968814892,94
104,4.206874132156372,0.8515427759217713,0.07661418914794922,0.002074496524321477,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9397590361445783,0.9427710843373494,0.9516616314199395,0.9546827794561934,0.9486404833836858,0.9475030029483493,0.005522631959620675,95
116,0.3227210998535156,0.006619502962729779,0.05196199417114258,0.0018715769688584045,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9518072289156626,0.9367469879518072,0.9425981873111783,0.9577039274924471,0.9486404833836858,0.9474993630109563,0.007261240848058956,96
151,18.664341592788695,0.17548792070289135,4.650269985198975,0.1665715284680172,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9518072289156626,0.9427710843373494,0.9365558912386707,0.9486404833836858,0.9577039274924471,0.9474957230735631,0.007295329026373951,97
46,19.034327936172485,0.4309227414022789,4.755634784698486,0.17040440434053136,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9548192771084337,0.9487951807228916,0.9395770392749244,0.9486404833836858,0.9425981873111783,0.9468860335602228,0.005319141155956954,98
36,8.206544399261475,0.11097261115740702,2.0379215717315673,0.08464410811372151,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9427710843373494,0.9457831325301205,0.9425981873111783,0.9486404833836858,0.9516616314199395,0.9462909037964546,0.0034827677260087157,99
6,8.160422039031982,0.14096676827489377,2.020525646209717,0.0764668185031475,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9397590361445783,0.9457831325301205,0.9425981873111783,0.9486404833836858,0.9516616314199395,0.9456884941579006,0.004221611879376327,100
41,0.3528902530670166,0.0071183729594007615,0.056526470184326175,0.00213303235796758,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9487951807228916,0.9397590361445783,0.9425981873111783,0.9546827794561934,0.9425981873111783,0.9456866741892039,0.005381581886848893,101
56,0.33359150886535643,0.012602971221839336,0.054583168029785155,0.0019245201378720073,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9518072289156626,0.9397590361445783,0.945619335347432,0.9516616314199395,0.9395770392749244,0.9456848542205073,0.005396857485625355,102
154,22.561282348632812,0.7231211556512009,4.688120174407959,0.1717634948019643,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9457831325301205,0.9367469879518072,0.9546827794561934,0.945619335347432,0.9425981873111783,0.9450860845193463,0.0058068399352321975,103
31,19.163311672210693,0.5564421416150466,4.7014483451843265,0.18001404051644831,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9518072289156626,0.9457831325301205,0.9365558912386707,0.9486404833836858,0.9425981873111783,0.9450769846758635,0.005239214160551428,104
21,8.251982879638671,0.08607628423644323,2.054724359512329,0.08297193099642304,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9397590361445783,0.9457831325301205,0.9425981873111783,0.9516616314199395,0.9425981873111783,0.944480034943399,0.004065560771963305,105
51,8.09178204536438,0.07767614635594651,2.0102853298187258,0.07675656180697943,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9457831325301205,0.9427710843373494,0.945619335347432,0.9486404833836858,0.9395770392749244,0.9444782149747024,0.003074581665625474,106
174,10.540636825561524,0.2993416307673196,2.0439820766448973,0.07298684678510808,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9548192771084337,0.9367469879518072,0.9425981873111783,0.9425981873111783,0.9335347432024169,0.942059476577003,0.007270303193302843,107
169,21.485147714614868,0.9118162127391799,4.72063512802124,0.22439552381170183,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9487951807228916,0.9307228915662651,0.945619335347432,0.945619335347432,0.9305135951661632,0.9402540676300367,0.007952897952340113,108
164,4.262263441085816,0.8130250676407192,0.07627320289611816,0.0021029553150068315,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9427710843373494,0.9427710843373494,0.9365558912386707,0.9486404833836858,0.9305135951661632,0.9402504276926436,0.006189603567244838,109
54,48.38245687484741,75.96770655091815,2.0318886280059814,0.056480281794678,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9487951807228916,0.9337349397590361,0.945619335347432,0.9365558912386707,0.9244712990936556,0.9378353292323371,0.008692025688581788,110
19,20.076257991790772,0.8532615325946812,4.468920564651489,0.1565575943843903,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9548192771084337,0.927710843373494,0.945619335347432,0.9335347432024169,0.9274924471299094,0.9378353292323371,0.01074263190237086,110
201,8.313643169403075,0.09622527337096538,2.0591636657714845,0.08126166390163965,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9427710843373494,0.9367469879518072,0.9335347432024169,0.9274924471299094,0.9425981873111783,0.9366286899865323,0.005769251967397916,112
231,8.240242910385131,0.0997001158127032,2.0566508293151857,0.09437529775773777,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9246987951807228,0.9487951807228916,0.9335347432024169,0.9395770392749244,0.9305135951661632,0.9354238707094238,0.00823100959001434,113
24,10.252464437484742,0.37460764135817154,2.073791980743408,0.08137493607871243,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9487951807228916,0.9397590361445783,0.9063444108761329,0.9425981873111783,0.9395770392749244,0.9354147708659412,0.014912543638308757,114
39,11.243099784851074,0.8140922614353018,2.085964250564575,0.100608335089141,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9518072289156626,0.9367469879518072,0.9365558912386707,0.9365558912386707,0.9154078549848943,0.9354147708659412,0.011604899635560427,114
186,8.288992786407471,0.11660268560596794,2.0463170051574706,0.08092719847676728,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9367469879518072,0.9397590361445783,0.9274924471299094,0.9335347432024169,0.9365558912386707,0.9348178211334766,0.004158499040730074,116
181,18.601800870895385,0.3582038275464117,4.616679573059082,0.19574200173616496,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9337349397590361,0.9548192771084337,0.9123867069486404,0.945619335347432,0.9214501510574018,0.9336020820441888,0.015442557830057636,117
211,18.7097909450531,0.21661830230574178,4.6508687973022464,0.17368707644196124,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9337349397590361,0.9367469879518072,0.9244712990936556,0.945619335347432,0.9244712990936556,0.9330087722491172,0.00799130494111364,118
226,18.593301391601564,0.16972280281321564,4.637704515457154,0.1692703389843158,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.927710843373494,0.9397590361445783,0.9214501510574018,0.9486404833836858,0.9214501510574018,0.9318021330033123,0.010750888915654242,119
196,17.91521873474121,0.21368213024525926,4.566622161865235,0.2183868882723254,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9216867469879518,0.9427710843373494,0.918429003021148,0.9365558912386707,0.9305135951661632,0.9299912641502566,0.009048114170712593,120
49,21.32017583847046,0.7592470783913767,4.706290578842163,0.16887211690110762,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9397590361445783,0.9427710843373494,0.9335347432024169,0.9395770392749244,0.8942598187311178,0.9299803443380773,0.018110284911125405,121
216,8.139162397384643,0.060657348839687354,2.012802839279175,0.07260712143431922,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9216867469879518,0.9367469879518072,0.9244712990936556,0.9274924471299094,0.9365558912386707,0.929390674480399,0.006206604533259171,122
59,3.6478878021240235,0.18365824233199188,0.07956652641296387,0.0017961027231873843,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9518072289156626,0.9397590361445783,0.918429003021148,0.9365558912386707,0.9003021148036254,0.9293706548247369,0.018042426160902462,123
191,0.6947156906127929,0.01400535617743657,0.14582371711730957,0.005159361803131465,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9246987951807228,0.9307228915662651,0.9274924471299094,0.9365558912386707,0.9214501510574018,0.928184035234594,0.005186601061916165,124
73,0.6419349670410156,0.02127187123156152,0.14928317070007324,0.005499972048244419,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9427710843373494,0.9216867469879518,0.9123867069486404,0.9425981873111783,0.9214501510574018,0.9281785753285042,0.012309875419403761,125
9,10.513604879379272,0.5815370016173389,2.051049900054932,0.08778277455868483,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9307228915662651,0.9337349397590361,0.9033232628398792,0.9335347432024169,0.9395770392749244,0.9281785753285042,0.01275732577259975,125
34,23.154775762557982,0.6176017481321645,4.750748109817505,0.1856058695241942,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9246987951807228,0.9066265060240963,0.945619335347432,0.918429003021148,0.9395770392749244,0.9269901357696646,0.014132925166474627,127
103,0.3310220718383789,0.054033916448568114,0.05411496162414551,0.002025328867093969,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9487951807228916,0.9156626506024096,0.9093655589123867,0.945619335347432,0.9154078549848943,0.9269701161140029,0.016706836422119026,128
206,0.6548189640045166,0.0017227339284454427,0.14646921157836915,0.005974073159378139,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9156626506024096,0.9246987951807228,0.9093655589123867,0.9395770392749244,0.9425981873111783,0.9263804462563243,0.012995158156535801,129
130,0.6042208194732666,0.006338579711169075,0.14654769897460937,0.005799510471778659,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9397590361445783,0.9186746987951807,0.9244712990936556,0.9395770392749244,0.9093655589123867,0.9263695264441452,0.011879948793119472,130
222,2.0722727298736574,0.0771311163167292,0.06873569488525391,0.0018171417108484664,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9186746987951807,0.9397590361445783,0.9305135951661632,0.9395770392749244,0.9003021148036254,0.9257652968368945,0.014884794428262557,131
138,17.727599143981934,0.1599964880682722,4.411327791213989,0.15558727008457512,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.927710843373494,0.9307228915662651,0.918429003021148,0.9486404833836858,0.9033232628398792,0.9257652968368945,0.014893643968159096,131
108,18.633255195617675,0.18481852517389047,4.639733505249024,0.17519826935926583,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9457831325301205,0.9156626506024096,0.9214501510574018,0.9365558912386707,0.9093655589123867,0.9257634768681978,0.013466892773414145,133
4,2964.5649824142456,1516.0705045064221,776.7459221839905,389.9355043028265,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9457831325301205,0.9246987951807228,0.9214501510574018,0.9154078549848943,0.9214501510574018,0.9257580169621082,0.010453405900038867,134
212,20.130320453643797,0.3423111635468575,4.672375202178955,0.17395054685504582,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9036144578313253,0.9698795180722891,0.9365558912386707,0.9305135951661632,0.8882175226586103,0.9257561969934118,0.028233109570612418,135
145,0.5954146385192871,0.0051935440794064775,0.14552569389343262,0.006449207201884758,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9156626506024096,0.9214501510574018,0.9395770392749244,0.9123867069486404,0.9251647071670368,0.011038377060017925,136
88,0.669718599319458,0.07801831086760425,0.1406278133392334,0.005351468300447159,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9337349397590361,0.9036144578313253,0.9244712990936556,0.9425981873111783,0.9154078549848943,0.9239653477960179,0.013640183487069595,137
118,0.34800429344177247,0.0607314834064305,0.050728797912597656,0.0018200776387471578,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9427710843373494,0.9036144578313253,0.9244712990936556,0.9305135951661632,0.918429003021148,0.9239598878899283,0.012973827068113293,138
70,0.6068639278411865,0.007177869363235886,0.14740071296691895,0.006198189554668969,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9156626506024096,0.9214501510574018,0.9365558912386707,0.9093655589123867,0.9233538383139809,0.010397228696545913,139
98,8.095892238616944,0.07619272737509292,1.9985747814178467,0.07579280415508377,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9367469879518072,0.9246987951807228,0.9214501510574018,0.9305135951661632,0.9033232628398792,0.9233465584391949,0.011289775891386302,140
85,0.5941995620727539,0.0069386388142062124,0.1456364631652832,0.006682645646548842,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9186746987951807,0.918429003021148,0.9305135951661632,0.9093655589123867,0.9227459687693372,0.009701663346066447,141
83,8.241559410095215,0.07450349450235255,2.0362860679626467,0.08517881003840035,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9307228915662651,0.9186746987951807,0.918429003021148,0.9305135951661632,0.9123867069486404,0.9221453790994796,0.0072758438044582645,142
120,17.767988443374634,0.15980542987603802,4.438125848770142,0.15881287595122115,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9186746987951807,0.9123867069486404,0.9365558912386707,0.9093655589123867,0.9221435591307829,0.011068711467650805,143
78,17.89911479949951,0.1803292087881739,4.498466348648071,0.22652070431730428,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9367469879518072,0.9186746987951807,0.9093655589123867,0.9395770392749244,0.9063444108761329,0.9221417391620864,0.013726687247017227,144
237,1.5954996585845946,0.0860387002471286,0.06558995246887207,0.0027539471936413474,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.9186746987951807,0.9487951807228916,0.9244712990936556,0.9274924471299094,0.8912386706948641,0.9221344592873002,0.01850125734581115,145
113,8.12696042060852,0.11541125735883274,2.0008631229400633,0.07489851602217466,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9337349397590361,0.9216867469879518,0.918429003021148,0.9274924471299094,0.9063444108761329,0.9215375095548357,0.009216874928646765,146
198,17.94030890464783,0.14915493048780526,4.536629152297974,0.213829932954861,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9246987951807228,0.9186746987951807,0.9154078549848943,0.9365558912386707,0.9063444108761329,0.9203363302151203,0.010049178615510765,147
63,17.86189646720886,0.16526812046557407,4.523153924942017,0.16186288957325273,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9337349397590361,0.9126506024096386,0.9123867069486404,0.9335347432024169,0.9093655589123867,0.9203345102464237,0.010921039982418501,148
65,8.235413789749146,0.06994188178478879,2.0515135288238526,0.07545710347917522,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.927710843373494,0.9216867469879518,0.918429003021148,0.9305135951661632,0.9033232628398792,0.9203326902777272,0.009516996206374523,149
80,8.200713443756104,0.11673984716378018,2.0463461875915527,0.0751499393960316,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.927710843373494,0.9216867469879518,0.9154078549848943,0.9305135951661632,0.9063444108761329,0.9203326902777272,0.008716047272761379,149
110,8.042927551269532,0.07632593722584288,2.0086097717285156,0.07791656104741011,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.9216867469879518,0.9123867069486404,0.9274924471299094,0.9093655589123867,0.9203308703090306,0.00830022259294941,151
93,18.65460443496704,0.18566308855562225,4.650728225708008,0.15977280075077657,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9367469879518072,0.9036144578313253,0.9214501510574018,0.9305135951661632,0.9063444108761329,0.919733920576566,0.013020809053577638,152
75,17.936280822753908,0.4143459665226729,4.459797620773315,0.13558919007894946,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9096385542168675,0.9154078549848943,0.9365558912386707,0.9033232628398792,0.9197321006078696,0.013182929654168936,153
135,17.679493808746336,0.16682092404491727,4.415666627883911,0.15571758392910867,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9066265060240963,0.9123867069486404,0.9365558912386707,0.9063444108761329,0.9197321006078696,0.013982045460321155,153
60,18.036142206192018,0.32137779917416304,4.4629778385162355,0.15364206607887107,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9096385542168675,0.9154078549848943,0.9335347432024169,0.9033232628398792,0.919730280639173,0.013189754002327962,155
25,0.5972022533416748,0.006760186546329187,0.14801278114318847,0.006100968605438523,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9397590361445783,0.9066265060240963,0.918429003021148,0.9274924471299094,0.9063444108761329,0.919730280639173,0.012759200740173239,155
68,8.2539568901062,0.09915844850861799,2.0391141414642333,0.08248965132659279,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9307228915662651,0.9186746987951807,0.9154078549848943,0.9274924471299094,0.9063444108761329,0.9197284606704766,0.008718575949570073,157
10,0.6002928733825683,0.009716488919184633,0.148299503326416,0.0053978781546545965,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9126506024096386,0.9123867069486404,0.9274924471299094,0.9093655589123867,0.9197284606704764,0.010595252849159211,158
125,8.177305746078492,0.08034123664275321,2.041526508331299,0.07896104426244215,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9186746987951807,0.9123867069486404,0.9274924471299094,0.9063444108761329,0.91972664070178,0.009905609283012057,159
140,8.175830078125,0.08225192800155755,2.041572332382202,0.08069355140688496,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.9216867469879518,0.9123867069486404,0.9274924471299094,0.9063444108761329,0.91972664070178,0.009143587937061368,159
20,8.195586204528809,0.09653877348355185,2.050524282455444,0.07801859253004653,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9156626506024096,0.918429003021148,0.9335347432024169,0.8912386706948641,0.9191224110945292,0.016175875631823648,161
95,8.047625160217285,0.07838680967399964,2.0087626457214354,0.07728395237101285,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.9216867469879518,0.9154078549848943,0.9214501510574018,0.9063444108761329,0.9191224110945292,0.008045378247877925,161
168,18.78780655860901,0.18159181905725424,4.695094966888428,0.228038326359285,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9246987951807228,0.9246987951807228,0.9063444108761329,0.9214501510574018,0.9154078549848943,0.9185200014559749,0.006969522538855976,163
50,8.081979846954345,0.09141984841024586,2.0184745311737062,0.07654029411861599,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9156626506024096,0.918429003021148,0.9335347432024169,0.8912386706948641,0.9185200014559749,0.0155523667651644,163
155,8.045994853973388,0.07994720830016915,2.009392786026001,0.07804603209403148,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9186746987951807,0.9123867069486404,0.9244712990936556,0.9003021148036254,0.918516361518582,0.01214226948230112,165
100,0.25329365730285647,0.0029096847460950617,0.051783084869384766,0.0019299786085418395,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9036144578313253,0.9123867069486404,0.9274924471299094,0.9093655589123867,0.9179212317548139,0.012284392885769373,166
170,8.149745464324951,0.09727866340382797,2.037444591522217,0.09248755906800335,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9186746987951807,0.9123867069486404,0.9244712990936556,0.9003021148036254,0.9179139518800277,0.01126595257893448,167
183,17.792589282989503,0.15911147940507786,4.415234994888306,0.16108205059471367,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9246987951807228,0.9066265060240963,0.9123867069486404,0.9365558912386707,0.9063444108761329,0.9173224620536526,0.011692885444711362,168
90,18.559705638885497,0.16867683414778692,4.647859811782837,0.17142634773193138,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9036144578313253,0.9154078549848943,0.9274924471299094,0.9063444108761329,0.9173188221162597,0.01170376573824509,169
105,18.572034311294555,0.17305432881074606,4.653929996490478,0.16694574986679522,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.8975903614457831,0.918429003021148,0.9274924471299094,0.9093655589123867,0.9167200524150985,0.012125000252552453,170
175,0.2517730712890625,0.009649062260802125,0.05162520408630371,0.002846602777810892,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.9036144578313253,0.9033232628398792,0.9365558912386707,0.9093655589123867,0.9167164124777054,0.014105737094394008,171
30,19.58718271255493,0.5416168953367927,4.759565687179565,0.17995187665385987,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9036144578313253,0.9093655589123867,0.9305135951661632,0.9063444108761329,0.9167145925090088,0.012753565660788568,172
133,0.6397244453430175,0.020247983262265522,0.1480884075164795,0.005436802985205575,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9186746987951807,0.9246987951807228,0.8912386706948641,0.9335347432024169,0.9154078549848943,0.9167109525716157,0.01415088030686909,173
5,1049.1853246688843,630.3716166159005,191.9048493862152,379.76182343911756,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9126506024096386,0.9093655589123867,0.9335347432024169,0.8912386706948641,0.9167073126342228,0.016755661575450845,174
165,18.65226492881775,0.18188124406533887,4.661122465133667,0.17736272177744006,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.9006024096385542,0.9093655589123867,0.9335347432024169,0.9063444108761329,0.9161140028391511,0.013405206233571146,175
193,0.6515140533447266,0.030797941805278777,0.14679956436157227,0.006425552824117888,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9307228915662651,0.9066265060240963,0.9063444108761329,0.918429003021148,0.918429003021148,0.916110362901758,0.009050917502886792,176
160,0.25412817001342775,0.005131606454008127,0.05190715789794922,0.002462087878243965,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9036144578313253,0.9003021148036254,0.9335347432024169,0.9093655589123867,0.916110362901758,0.014599831989283366,176
115,0.24677743911743164,0.003034669847668362,0.0508725643157959,0.002113303719308116,"LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, penalty='l1', random_state=42,
                   solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.927710843373494,0.9096385542168675,0.9063444108761329,0.9274924471299094,0.9093655589123867,0.916110362901758,0.009453819291984958,176
35,8.135449028015136,0.13190918735440646,2.027235412597656,0.07216113625679389,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.9126506024096386,0.9123867069486404,0.9305135951661632,0.8942598187311178,0.9161067229643649,0.013596035188692608,179
128,8.237136363983154,0.07941000646114027,2.0347278118133545,0.07989735496555844,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9307228915662651,0.9246987951807228,0.9033232628398792,0.9123867069486404,0.9093655589123867,0.9160994430895789,0.01010103449429458,180
208,0.6684360027313232,0.07777638221343973,0.13991031646728516,0.0052994826902703004,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.927710843373494,0.9036144578313253,0.9093655589123867,0.9214501510574018,0.9154078549848943,0.9155097732319005,0.008525426519795282,181
150,18.579304027557374,0.1731167224452776,4.652408933639526,0.165957542900761,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9036144578313253,0.9063444108761329,0.9305135951661632,0.9033232628398792,0.9155061332945073,0.013647598561341772,182
173,8.163859701156616,0.17049385636471506,2.017213153839111,0.05436934050781243,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9307228915662651,0.9307228915662651,0.9063444108761329,0.9154078549848943,0.8942598187311178,0.915491573544935,0.014131179027205478,183
45,19.066582012176514,0.3076457502039867,4.772481966018677,0.2179751820941493,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9337349397590361,0.9006024096385542,0.9123867069486404,0.9244712990936556,0.9033232628398792,0.9149037236559531,0.012578737839059247,184
221,0.34558491706848143,0.006503888924678159,0.05384297370910644,0.0028487655424997943,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9186746987951807,0.9246987951807228,0.9063444108761329,0.9093655589123867,0.9154078549848943,0.9148982637498635,0.006547530572813694,185
0,17.53666157722473,0.16097531841269858,4.397694206237793,0.15277655898979875,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9397590361445783,0.9036144578313253,0.9033232628398792,0.9365558912386707,0.8851963746223565,0.913689804535362,0.02108703916606729,186
15,17.625880002975464,0.1970616389290685,4.417067337036133,0.1515094459187988,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9367469879518072,0.9066265060240963,0.9063444108761329,0.9305135951661632,0.8851963746223565,0.9130855749281113,0.01859337900045544,187
218,8.177792596817017,0.05827895739568116,2.0069869995117187,0.08084320245819919,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9307228915662651,0.9186746987951807,0.9003021148036254,0.9154078549848943,0.9003021148036254,0.9130819349907181,0.011614989175380171,188
158,8.097877788543702,0.07397108921378755,2.0009501934051515,0.07630730010429973,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9216867469879518,0.927710843373494,0.9033232628398792,0.918429003021148,0.8942598187311178,0.9130819349907181,0.012378551039107137,188
203,8.256514596939088,0.11910089491266537,2.0495832443237303,0.06803493937238789,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.927710843373494,0.9096385542168675,0.9003021148036254,0.9244712990936556,0.9003021148036254,0.9124849852582535,0.011665721661415121,190
153,18.658042192459106,0.16295361390200194,4.645207643508911,0.16905595532956072,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9216867469879518,0.9006024096385542,0.9063444108761329,0.9365558912386707,0.8942598187311178,0.9118898554944854,0.015319066476203212,191
40,0.2593377590179443,0.005601339689315577,0.053704833984375,0.002338115240357626,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.927710843373494,0.9006024096385542,0.9063444108761329,0.9274924471299094,0.8972809667673716,0.9118862155570925,0.013155397954990222,192
123,17.85433177947998,0.20813077400858918,4.45951247215271,0.11738027784109543,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9246987951807228,0.9066265060240963,0.8912386706948641,0.945619335347432,0.8912386706948641,0.9118843955883961,0.020892066977141327,193
55,0.25226831436157227,0.006337114070899087,0.05316529273986816,0.0025317615842525595,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9307228915662651,0.9036144578313253,0.8972809667673716,0.9274924471299094,0.9003021148036254,0.9118825756196994,0.01424290292800674,194
233,8.172133779525756,0.11163527003468003,2.0021222114562987,0.0774612682992872,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9337349397590361,0.9216867469879518,0.8731117824773413,0.9305135951661632,0.8972809667673716,0.9112656062315727,0.022957528655634583,195
148,0.6683631896972656,0.07818307175781224,0.13988714218139647,0.005743458371600159,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.927710843373494,0.8975903614457831,0.8761329305135952,0.9335347432024169,0.918429003021148,0.9106795763112874,0.021153130299620574,196
227,19.72509422302246,0.23327854913867554,4.649802923202515,0.17360932846796825,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8945783132530121,0.9457831325301205,0.9305135951661632,0.9123867069486404,0.8670694864048338,0.910066246860554,0.027523706170508328,197
236,0.303924560546875,0.001985834044806449,0.0515629768371582,0.0018789712851106006,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=50, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=50, random_state=42)}",0.9126506024096386,0.927710843373494,0.9033232628398792,0.8912386706948641,0.9154078549848943,0.910066246860554,0.012218747193067606,197
178,0.3496593475341797,0.05946676789865509,0.05076861381530762,0.0019343315176700057,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9367469879518072,0.9096385542168675,0.8610271903323263,0.9214501510574018,0.918429003021148,0.9094583773159102,0.025747059520662533,199
163,0.3326237678527832,0.05291441415950771,0.05473947525024414,0.0029700155804226365,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9216867469879518,0.9307228915662651,0.8368580060422961,0.9305135951661632,0.9214501510574018,0.9082462781640157,0.035922988223768035,200
143,8.20731496810913,0.10302086739574882,2.0318088054656984,0.08066018216461694,"LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear')","CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': LogisticRegression(C=10.0, max_iter=5000, random_state=42, solver='liblinear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9156626506024096,0.9126506024096386,0.8882175226586103,0.9214501510574018,0.8972809667673716,0.9070523786990863,0.012353177996362992,201
213,18.705177974700927,0.17291731616076514,4.650926542282105,0.17568037259399855,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.927710843373494,0.9006024096385542,0.9003021148036254,0.9154078549848943,0.8851963746223565,0.905843919484585,0.014519899145952066,202
188,8.318834400177002,0.11172592335552957,2.0573027610778807,0.08191346061114789,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.927710843373494,0.9006024096385542,0.8761329305135952,0.9214501510574018,0.9033232628398792,0.905843919484585,0.01810130837971961,202
18,17.856718158721925,0.16938067122475223,4.469756698608398,0.176315245987341,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9307228915662651,0.9096385542168675,0.8882175226586103,0.9154078549848943,0.8761329305135952,0.9040239507880464,0.01950232123243613,204
225,18.561907386779787,0.15491526801564814,4.642336034774781,0.16998344149468506,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.891566265060241,0.9246987951807228,0.9063444108761329,0.9214501510574018,0.8640483383685801,0.9016215921086157,0.0221850989062048,205
238,0.34613800048828125,0.060737549018371174,0.05050334930419922,0.0018460577105870151,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9216867469879518,0.8975903614457831,0.8731117824773413,0.9154078549848943,0.8942598187311178,0.9004113129254175,0.017138281005102552,206
28,0.6848289966583252,0.07988109315533584,0.14531760215759276,0.005853341967297684,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9066265060240963,0.9036144578313253,0.879154078549849,0.918429003021148,0.8851963746223565,0.898604084009755,0.014426086773783594,207
223,0.3287649154663086,0.05435849913764313,0.05404210090637207,0.0018843050303346388,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9246987951807228,0.9066265060240963,0.8761329305135952,0.8882175226586103,0.8972809667673716,0.8985913442288792,0.016491673231958597,208
44,4.327213430404663,0.8308029237544686,0.08572721481323242,0.003023242783476499,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.8343373493975904,0.9156626506024096,0.8972809667673716,0.9486404833836858,0.8942598187311178,0.898036253776435,0.03726623205636124,209
14,4.50740876197815,0.8822456709397837,0.17680821418762208,0.005284204622695532,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=50, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=50, random_state=42)}",0.9548192771084337,0.9096385542168675,0.8459214501510574,0.8912386706948641,0.8882175226586103,0.8979670949659667,0.03526320624377119,210
232,9.280887174606324,0.34495237138050605,2.0514111042022707,0.08102555173355189,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8765060240963856,0.9246987951807228,0.8821752265861027,0.8972809667673716,0.8731117824773413,0.8907545590215848,0.018882258462561332,211
13,0.6503248691558838,0.01609949664045667,0.15225620269775392,0.00601787529884587,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9186746987951807,0.9126506024096386,0.8640483383685801,0.8821752265861027,0.8731117824773413,0.8901321297273688,0.02170312678252962,212
205,0.5990547657012939,0.006490938478961367,0.1450648307800293,0.005471681621802957,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9036144578313253,0.8825301204819277,0.8489425981873112,0.9274924471299094,0.8851963746223565,0.8895551996505662,0.02590224691978494,213
202,9.263221597671508,0.17666608021565353,2.06798734664917,0.0894430343374894,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8885542168674698,0.9096385542168675,0.9033232628398792,0.8851963746223565,0.8610271903323263,0.8895479197757797,0.016892300420357127,214
228,18.619657850265504,0.18300023270345106,4.62884750366211,0.1709880960479116,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.8734939759036144,0.8855421686746988,0.8761329305135952,0.9093655589123867,0.8942598187311178,0.8877588905470827,0.013058903303473835,215
3,17.765364789962767,0.18677253123260884,4.4274904251098635,0.15705711338525863,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9246987951807228,0.8825301204819277,0.8851963746223565,0.9063444108761329,0.8368580060422961,0.8871255414406871,0.02943731996095932,216
33,18.938267755508424,0.16538474516039853,4.703422880172729,0.19124121751786893,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.8644578313253012,0.9126506024096386,0.9093655589123867,0.9154078549848943,0.8126888217522659,0.8829141338768973,0.039779409059283614,217
190,0.6054247379302978,0.00959242115077722,0.14701766967773439,0.004848508276227963,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.8975903614457831,0.891566265060241,0.8157099697885196,0.9003021148036254,0.9003021148036254,0.8810941651803589,0.032847444441294754,218
210,18.556070375442506,0.17099062390264716,4.685334873199463,0.19199309079520777,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.8945783132530121,0.9036144578313253,0.8308157099697885,0.9003021148036254,0.8731117824773413,0.8804844756670185,0.027010050146290866,219
53,8.102056217193603,0.11595754621469898,2.0036611557006836,0.07712522916822187,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.8975903614457831,0.8825301204819277,0.8580060422960725,0.9214501510574018,0.8368580060422961,0.8792869362646962,0.029584999127272173,220
8,8.088175010681152,0.0817467127749176,2.007910633087158,0.07117709630938794,SVC(kernel='linear'),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.8945783132530121,0.8885542168674698,0.851963746223565,0.9093655589123867,0.851963746223565,0.8792851162959998,0.02331328227357793,221
235,0.24466166496276856,0.007528277772644286,0.05290498733520508,0.0032809996636095824,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9036144578313253,0.8674698795180723,0.8277945619335347,0.9274924471299094,0.8640483383685801,0.8780839369562845,0.03444324565694615,222
23,8.25797004699707,0.09445178227715725,2.0560879707336426,0.07469972486616558,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9126506024096386,0.8945783132530121,0.8429003021148036,0.8912386706948641,0.8398791540785498,0.8762494085101737,0.029396026779177624,223
48,19.21681661605835,0.5005370090852809,4.747996711730957,0.2487194712279152,SVC(kernel='linear'),"CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessNC at 0x177105e50>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.8855421686746988,0.9096385542168675,0.824773413897281,0.9214501510574018,0.8368580060422961,0.875652458777709,0.03858491009235718,224
217,9.222921514511109,0.14962953263960585,2.0245867729187013,0.06833848898019398,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8554216867469879,0.8975903614457831,0.8580060422960725,0.8882175226586103,0.8761329305135952,0.8750737087322097,0.0164826493648355,225
180,18.194133520126343,0.34450048606990963,4.549454689025879,0.23914276133670087,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.9096385542168675,0.8945783132530121,0.824773413897281,0.9003021148036254,0.8459214501510574,0.8750427692643686,0.03344129084950278,226
38,8.148013591766357,0.11302176187048056,2.007700729370117,0.076608492105905,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9066265060240963,0.8945783132530121,0.8217522658610272,0.9123867069486404,0.8308157099697885,0.8732319004113128,0.03886709118320996,227
195,18.04854197502136,0.11374339531234806,4.476386594772339,0.17275020005950673,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.8885542168674698,0.8975903614457831,0.8398791540785498,0.879154078549849,0.851963746223565,0.8714283114330433,0.021962038174694786,228
197,18.98365488052368,0.1772026285297967,4.514049291610718,0.18212574298334516,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8704819277108434,0.9186746987951807,0.8368580060422961,0.8610271903323263,0.8670694864048338,0.8708222618570961,0.02665921593396214,229
207,1.829139518737793,0.058073507783732346,0.15728464126586914,0.00668452434634144,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8614457831325302,0.8765060240963856,0.9033232628398792,0.8670694864048338,0.8429003021148036,0.8702489717176866,0.019842451576725397,230
187,9.451159143447876,0.11011014197988045,2.0798664569854735,0.07978231846275445,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8493975903614458,0.8885542168674698,0.8459214501510574,0.8942598187311178,0.8670694864048338,0.869040512503185,0.01970288528527401,231
182,19.87550449371338,0.31707867065769013,4.614570617675781,0.19603187036081668,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocess at 0x177105a60>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8825301204819277,0.8885542168674698,0.8096676737160121,0.8851963746223565,0.8731117824773413,0.8678120336330213,0.029522633640745685,232
192,2.484057140350342,0.32248947318163146,0.16290102005004883,0.00823691770264015,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english')","TruncatedSVD(n_components=500, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompress at 0x177105ca0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=500, random_state=42)}",0.8674698795180723,0.8403614457831325,0.9063444108761329,0.8912386706948641,0.797583081570997,0.8605994976886396,0.038624359144873166,233
215,8.058688545227051,0.0855388257316397,2.0141594886779783,0.07676947479117617,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.891566265060241,0.8704819277108434,0.824773413897281,0.8700906344410876,0.8338368580060423,0.858149819823099,0.024965685794008062,234
185,8.347884225845338,0.14625405276831824,2.0811442375183105,0.08503593307642351,GaussianNB(),"CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.8945783132530121,0.8734939759036144,0.8217522658610272,0.8610271903323263,0.8308157099697885,0.8563334910639536,0.02693027205778691,235
220,0.25171670913696287,0.005095167513565205,0.05163125991821289,0.0019979085633900443,GaussianNB(),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.8644578313253012,0.8524096385542169,0.8096676737160121,0.8972809667673716,0.851963746223565,0.8551559713172934,0.02809967154482412,236
230,8.030469942092896,0.10922823882731601,2.013741445541382,0.09584961980991616,GaussianNB(),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessStemNC at 0x177105ee0>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.8795180722891566,0.8644578313253012,0.8187311178247734,0.8610271903323263,0.8429003021148036,0.8533269027772722,0.02085546305899845,237
200,8.31900725364685,0.0625006280794424,2.0802741050720215,0.10051378670538015,GaussianNB(),"CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english')","TruncatedSVD(n_components=5, random_state=42)","{'clf': GaussianNB(), 'count': CountVectorizer(min_df=5, preprocessor=<function preprocessStem at 0x177105d30>,
                stop_words='english'), 'dim_reduce': TruncatedSVD(n_components=5, random_state=42)}",0.8795180722891566,0.858433734939759,0.8187311178247734,0.8610271903323263,0.8398791540785498,0.8515178538929131,0.020652837653843698,238
43,0.34464521408081056,0.05485402461831048,0.05819478034973145,0.001833806575219771,SVC(kernel='linear'),"CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=3,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.9066265060240963,0.8554216867469879,0.6737160120845922,0.9033232628398792,0.851963746223565,0.838210242783824,0.08539816748628588,239
58,0.3591622352600098,0.06273757511843785,0.05433979034423828,0.00166013863010514,SVC(kernel='linear'),"CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english')","NMF(init='random', n_components=5, random_state=42)","{'clf': SVC(kernel='linear'), 'count': CountVectorizer(min_df=5,
                preprocessor=<function preprocessNoCompressNC at 0x177105f70>,
                stop_words='english'), 'dim_reduce': NMF(init='random', n_components=5, random_state=42)}",0.8795180722891566,0.8042168674698795,0.7069486404833837,0.9154078549848943,0.8640483383685801,0.8340279547191788,0.07298097755973229,240
